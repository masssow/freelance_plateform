security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    role_hierarchy:
            ROLE_ADMIN: ROLE_USER
            ROLE_CLIENT: ROLE_USER
            ROLE_FREELANCE: ROLE_USER
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true
        client_area:
            pattern: ^/client
            provider: app_user_provider
            form_login:
                check_path: client_login
                login_path: client_login
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 604800       # Durée du cookie: 7 jours (en secondes)
                path: /                # Où le cookie est valide
                always_remember_me: true  # Toujours se souvenir de l'utilisateur
                secure: true           # Active uniquement en HTTPS
                httponly: true 
                  
            custom_authenticators:
                    - App\Security\AppAuthenticator
            entry_point: App\Security\AppAuthenticator  # Utilisation de l'authenticator personnalisé comme entry point
            logout:
                path: logout
                invalidate_session: true
                delete_cookies: 
                    REMEMBERME: ~
        freelance_area:
            pattern: ^/freelance
            provider: app_user_provider
            form_login:
                check_path: freelance_login
                login_path: freelance_login
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 604800
                path: /
                always_remember_me: true
                secure: true  # Active uniquement en HTTPS
                httponly: true 
                        
            custom_authenticators:
                    - App\Security\AppAuthenticator
            entry_point: App\Security\AppAuthenticator  # Utilisation de l'authenticator personnalisé comme entry point
            logout:
                path: logout
                invalidate_session: true
                delete_cookies: 
                    REMEMBERME: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site

    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # - { path: ^/client, roles: ROLE_CLIENT }
        # - { path: ^/freelance, roles: ROLE_FREELANCE }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
